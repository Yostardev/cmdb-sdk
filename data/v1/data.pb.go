// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.3
// source: data/v1/data.proto

package data

import (
	general "github.com/Yostardev/cmdb-sdk/general"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UpdateDocumentByFilterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: validate:"required"
	RequestID *general.RequestID `protobuf:"bytes,1,opt,name=RequestID,proto3" json:"RequestID,omitempty" validate:"required"`
	// @gotags: validate:"required"
	Token *general.Token `protobuf:"bytes,2,opt,name=Token,proto3" json:"Token,omitempty" validate:"required"`
	// @gotags: validate:"required"
	Option *UpdateDocumentByFilterOption `protobuf:"bytes,3,opt,name=Option,proto3" json:"Option,omitempty" validate:"required"`
}

func (x *UpdateDocumentByFilterRequest) Reset() {
	*x = UpdateDocumentByFilterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_v1_data_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDocumentByFilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDocumentByFilterRequest) ProtoMessage() {}

func (x *UpdateDocumentByFilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_data_v1_data_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDocumentByFilterRequest.ProtoReflect.Descriptor instead.
func (*UpdateDocumentByFilterRequest) Descriptor() ([]byte, []int) {
	return file_data_v1_data_proto_rawDescGZIP(), []int{0}
}

func (x *UpdateDocumentByFilterRequest) GetRequestID() *general.RequestID {
	if x != nil {
		return x.RequestID
	}
	return nil
}

func (x *UpdateDocumentByFilterRequest) GetToken() *general.Token {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *UpdateDocumentByFilterRequest) GetOption() *UpdateDocumentByFilterOption {
	if x != nil {
		return x.Option
	}
	return nil
}

type UpdateDocumentByFilterOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionName string `protobuf:"bytes,1,opt,name=CollectionName,proto3" json:"CollectionName,omitempty"`
	Filter         []byte `protobuf:"bytes,2,opt,name=Filter,proto3" json:"Filter,omitempty"`
	Data           []byte `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *UpdateDocumentByFilterOption) Reset() {
	*x = UpdateDocumentByFilterOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_v1_data_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDocumentByFilterOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDocumentByFilterOption) ProtoMessage() {}

func (x *UpdateDocumentByFilterOption) ProtoReflect() protoreflect.Message {
	mi := &file_data_v1_data_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDocumentByFilterOption.ProtoReflect.Descriptor instead.
func (*UpdateDocumentByFilterOption) Descriptor() ([]byte, []int) {
	return file_data_v1_data_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateDocumentByFilterOption) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *UpdateDocumentByFilterOption) GetFilter() []byte {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *UpdateDocumentByFilterOption) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type AllDocumentOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionName string `protobuf:"bytes,1,opt,name=CollectionName,proto3" json:"CollectionName,omitempty"`
	Filter         []byte `protobuf:"bytes,2,opt,name=Filter,proto3" json:"Filter,omitempty"`
}

func (x *AllDocumentOption) Reset() {
	*x = AllDocumentOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_v1_data_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllDocumentOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllDocumentOption) ProtoMessage() {}

func (x *AllDocumentOption) ProtoReflect() protoreflect.Message {
	mi := &file_data_v1_data_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllDocumentOption.ProtoReflect.Descriptor instead.
func (*AllDocumentOption) Descriptor() ([]byte, []int) {
	return file_data_v1_data_proto_rawDescGZIP(), []int{2}
}

func (x *AllDocumentOption) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *AllDocumentOption) GetFilter() []byte {
	if x != nil {
		return x.Filter
	}
	return nil
}

type AllDocumentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: validate:"required"
	RequestID *general.RequestID `protobuf:"bytes,1,opt,name=RequestID,proto3" json:"RequestID,omitempty" validate:"required"`
	// @gotags: validate:"required"
	Token *general.Token `protobuf:"bytes,2,opt,name=Token,proto3" json:"Token,omitempty" validate:"required"`
	// @gotags: validate:"required"
	Option *AllDocumentOption `protobuf:"bytes,3,opt,name=Option,proto3" json:"Option,omitempty" validate:"required"`
}

func (x *AllDocumentRequest) Reset() {
	*x = AllDocumentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_v1_data_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllDocumentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllDocumentRequest) ProtoMessage() {}

func (x *AllDocumentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_data_v1_data_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllDocumentRequest.ProtoReflect.Descriptor instead.
func (*AllDocumentRequest) Descriptor() ([]byte, []int) {
	return file_data_v1_data_proto_rawDescGZIP(), []int{3}
}

func (x *AllDocumentRequest) GetRequestID() *general.RequestID {
	if x != nil {
		return x.RequestID
	}
	return nil
}

func (x *AllDocumentRequest) GetToken() *general.Token {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *AllDocumentRequest) GetOption() *AllDocumentOption {
	if x != nil {
		return x.Option
	}
	return nil
}

type RelationOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: json:"action" validate:"required" binding:"required"
	Action string `protobuf:"bytes,1,opt,name=Action,proto3" json:"action" validate:"required" binding:"required"`
	// @gotags: json:"relation_id" validate:"required" binding:"required"
	RelationID int64 `protobuf:"varint,2,opt,name=relationID,proto3" json:"relation_id" validate:"required" binding:"required"`
	// @gotags: json:"resource_id" validate:"required" binding:"required"
	ResourceID string `protobuf:"bytes,3,opt,name=resourceID,proto3" json:"resource_id" validate:"required" binding:"required"`
	// @gotags: json:"relation_resource_ids" validate:"required" binding:"required"
	RelationResourceIDs []string `protobuf:"bytes,4,rep,name=relationResourceIDs,proto3" json:"relation_resource_ids" validate:"required" binding:"required"`
}

func (x *RelationOption) Reset() {
	*x = RelationOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_v1_data_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelationOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelationOption) ProtoMessage() {}

func (x *RelationOption) ProtoReflect() protoreflect.Message {
	mi := &file_data_v1_data_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelationOption.ProtoReflect.Descriptor instead.
func (*RelationOption) Descriptor() ([]byte, []int) {
	return file_data_v1_data_proto_rawDescGZIP(), []int{4}
}

func (x *RelationOption) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *RelationOption) GetRelationID() int64 {
	if x != nil {
		return x.RelationID
	}
	return 0
}

func (x *RelationOption) GetResourceID() string {
	if x != nil {
		return x.ResourceID
	}
	return ""
}

func (x *RelationOption) GetRelationResourceIDs() []string {
	if x != nil {
		return x.RelationResourceIDs
	}
	return nil
}

type RelationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: validate:"required"
	RequestID *general.RequestID `protobuf:"bytes,1,opt,name=RequestID,proto3" json:"RequestID,omitempty" validate:"required"`
	// @gotags: validate:"required"
	Option *RelationOption `protobuf:"bytes,2,opt,name=Option,proto3" json:"Option,omitempty" validate:"required"`
}

func (x *RelationRequest) Reset() {
	*x = RelationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_v1_data_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelationRequest) ProtoMessage() {}

func (x *RelationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_data_v1_data_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelationRequest.ProtoReflect.Descriptor instead.
func (*RelationRequest) Descriptor() ([]byte, []int) {
	return file_data_v1_data_proto_rawDescGZIP(), []int{5}
}

func (x *RelationRequest) GetRequestID() *general.RequestID {
	if x != nil {
		return x.RequestID
	}
	return nil
}

func (x *RelationRequest) GetOption() *RelationOption {
	if x != nil {
		return x.Option
	}
	return nil
}

type DistinctOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: validate:"required"
	CollectionName string `protobuf:"bytes,1,opt,name=CollectionName,proto3" json:"CollectionName,omitempty" validate:"required"`
	// @gotags: validate:"required"
	FieldName string `protobuf:"bytes,2,opt,name=FieldName,proto3" json:"FieldName,omitempty" validate:"required"`
}

func (x *DistinctOption) Reset() {
	*x = DistinctOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_v1_data_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DistinctOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DistinctOption) ProtoMessage() {}

func (x *DistinctOption) ProtoReflect() protoreflect.Message {
	mi := &file_data_v1_data_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DistinctOption.ProtoReflect.Descriptor instead.
func (*DistinctOption) Descriptor() ([]byte, []int) {
	return file_data_v1_data_proto_rawDescGZIP(), []int{6}
}

func (x *DistinctOption) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *DistinctOption) GetFieldName() string {
	if x != nil {
		return x.FieldName
	}
	return ""
}

type DistinctRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: validate:"required"
	RequestID *general.RequestID `protobuf:"bytes,1,opt,name=RequestID,proto3" json:"RequestID,omitempty" validate:"required"`
	// @gotags: validate:"required"
	Option *DistinctOption `protobuf:"bytes,2,opt,name=Option,proto3" json:"Option,omitempty" validate:"required"`
}

func (x *DistinctRequest) Reset() {
	*x = DistinctRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_v1_data_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DistinctRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DistinctRequest) ProtoMessage() {}

func (x *DistinctRequest) ProtoReflect() protoreflect.Message {
	mi := &file_data_v1_data_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DistinctRequest.ProtoReflect.Descriptor instead.
func (*DistinctRequest) Descriptor() ([]byte, []int) {
	return file_data_v1_data_proto_rawDescGZIP(), []int{7}
}

func (x *DistinctRequest) GetRequestID() *general.RequestID {
	if x != nil {
		return x.RequestID
	}
	return nil
}

func (x *DistinctRequest) GetOption() *DistinctOption {
	if x != nil {
		return x.Option
	}
	return nil
}

type DistinctResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *DistinctResponse) Reset() {
	*x = DistinctResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_v1_data_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DistinctResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DistinctResponse) ProtoMessage() {}

func (x *DistinctResponse) ProtoReflect() protoreflect.Message {
	mi := &file_data_v1_data_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DistinctResponse.ProtoReflect.Descriptor instead.
func (*DistinctResponse) Descriptor() ([]byte, []int) {
	return file_data_v1_data_proto_rawDescGZIP(), []int{8}
}

func (x *DistinctResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetResourceCountOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: json:"filter"
	Filter []byte `protobuf:"bytes,1,opt,name=Filter,proto3" json:"filter"`
}

func (x *GetResourceCountOption) Reset() {
	*x = GetResourceCountOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_v1_data_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResourceCountOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResourceCountOption) ProtoMessage() {}

func (x *GetResourceCountOption) ProtoReflect() protoreflect.Message {
	mi := &file_data_v1_data_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResourceCountOption.ProtoReflect.Descriptor instead.
func (*GetResourceCountOption) Descriptor() ([]byte, []int) {
	return file_data_v1_data_proto_rawDescGZIP(), []int{9}
}

func (x *GetResourceCountOption) GetFilter() []byte {
	if x != nil {
		return x.Filter
	}
	return nil
}

type GetResourceCountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: validate:"required"
	RequestID *general.RequestID `protobuf:"bytes,1,opt,name=RequestID,proto3" json:"RequestID,omitempty" validate:"required"`
	// @gotags: validate:"required"
	Option *GetResourceCountOption `protobuf:"bytes,2,opt,name=Option,proto3" json:"Option,omitempty" validate:"required"`
}

func (x *GetResourceCountRequest) Reset() {
	*x = GetResourceCountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_v1_data_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResourceCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResourceCountRequest) ProtoMessage() {}

func (x *GetResourceCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_data_v1_data_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResourceCountRequest.ProtoReflect.Descriptor instead.
func (*GetResourceCountRequest) Descriptor() ([]byte, []int) {
	return file_data_v1_data_proto_rawDescGZIP(), []int{10}
}

func (x *GetResourceCountRequest) GetRequestID() *general.RequestID {
	if x != nil {
		return x.RequestID
	}
	return nil
}

func (x *GetResourceCountRequest) GetOption() *GetResourceCountOption {
	if x != nil {
		return x.Option
	}
	return nil
}

type ResourceCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: json:"model_id"
	ModelID int64 `protobuf:"varint,1,opt,name=ModelID,proto3" json:"model_id"`
	// @gotags: json:"name"
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"name"`
	// @gotags: json:"cn_name"
	CnName string `protobuf:"bytes,3,opt,name=CnName,proto3" json:"cn_name"`
	// @gotags: json:"icon"
	Icon string `protobuf:"bytes,4,opt,name=Icon,proto3" json:"icon"`
	// @gotags: json:"count"
	Count int64 `protobuf:"varint,5,opt,name=Count,proto3" json:"count"`
}

func (x *ResourceCount) Reset() {
	*x = ResourceCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_v1_data_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceCount) ProtoMessage() {}

func (x *ResourceCount) ProtoReflect() protoreflect.Message {
	mi := &file_data_v1_data_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceCount.ProtoReflect.Descriptor instead.
func (*ResourceCount) Descriptor() ([]byte, []int) {
	return file_data_v1_data_proto_rawDescGZIP(), []int{11}
}

func (x *ResourceCount) GetModelID() int64 {
	if x != nil {
		return x.ModelID
	}
	return 0
}

func (x *ResourceCount) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ResourceCount) GetCnName() string {
	if x != nil {
		return x.CnName
	}
	return ""
}

func (x *ResourceCount) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *ResourceCount) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ResourceCountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*ResourceCount `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
}

func (x *ResourceCountResponse) Reset() {
	*x = ResourceCountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_v1_data_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceCountResponse) ProtoMessage() {}

func (x *ResourceCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_data_v1_data_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceCountResponse.ProtoReflect.Descriptor instead.
func (*ResourceCountResponse) Descriptor() ([]byte, []int) {
	return file_data_v1_data_proto_rawDescGZIP(), []int{12}
}

func (x *ResourceCountResponse) GetData() []*ResourceCount {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetTreeNodesOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: json:"tag"
	Tag string `protobuf:"bytes,1,opt,name=Tag,proto3" json:"tag"`
	// @gotags: json:"filter"
	Filter []byte `protobuf:"bytes,2,opt,name=Filter,proto3" json:"filter"`
}

func (x *GetTreeNodesOption) Reset() {
	*x = GetTreeNodesOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_v1_data_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTreeNodesOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTreeNodesOption) ProtoMessage() {}

func (x *GetTreeNodesOption) ProtoReflect() protoreflect.Message {
	mi := &file_data_v1_data_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTreeNodesOption.ProtoReflect.Descriptor instead.
func (*GetTreeNodesOption) Descriptor() ([]byte, []int) {
	return file_data_v1_data_proto_rawDescGZIP(), []int{13}
}

func (x *GetTreeNodesOption) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *GetTreeNodesOption) GetFilter() []byte {
	if x != nil {
		return x.Filter
	}
	return nil
}

type GetTreeNodesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: validate:"required"
	RequestID *general.RequestID `protobuf:"bytes,1,opt,name=RequestID,proto3" json:"RequestID,omitempty" validate:"required"`
	// @gotags: validate:"required"
	Option *GetTreeNodesOption `protobuf:"bytes,2,opt,name=Option,proto3" json:"Option,omitempty" validate:"required"`
}

func (x *GetTreeNodesRequest) Reset() {
	*x = GetTreeNodesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_v1_data_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTreeNodesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTreeNodesRequest) ProtoMessage() {}

func (x *GetTreeNodesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_data_v1_data_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTreeNodesRequest.ProtoReflect.Descriptor instead.
func (*GetTreeNodesRequest) Descriptor() ([]byte, []int) {
	return file_data_v1_data_proto_rawDescGZIP(), []int{14}
}

func (x *GetTreeNodesRequest) GetRequestID() *general.RequestID {
	if x != nil {
		return x.RequestID
	}
	return nil
}

func (x *GetTreeNodesRequest) GetOption() *GetTreeNodesOption {
	if x != nil {
		return x.Option
	}
	return nil
}

type GetTreeNodesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *GetTreeNodesResponse) Reset() {
	*x = GetTreeNodesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_v1_data_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTreeNodesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTreeNodesResponse) ProtoMessage() {}

func (x *GetTreeNodesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_data_v1_data_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTreeNodesResponse.ProtoReflect.Descriptor instead.
func (*GetTreeNodesResponse) Descriptor() ([]byte, []int) {
	return file_data_v1_data_proto_rawDescGZIP(), []int{15}
}

func (x *GetTreeNodesResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type CollectionRequestOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: validate:"required"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" validate:"required"`
}

func (x *CollectionRequestOption) Reset() {
	*x = CollectionRequestOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_v1_data_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectionRequestOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionRequestOption) ProtoMessage() {}

func (x *CollectionRequestOption) ProtoReflect() protoreflect.Message {
	mi := &file_data_v1_data_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionRequestOption.ProtoReflect.Descriptor instead.
func (*CollectionRequestOption) Descriptor() ([]byte, []int) {
	return file_data_v1_data_proto_rawDescGZIP(), []int{16}
}

func (x *CollectionRequestOption) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CollectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: validate:"required"
	Option *CollectionRequestOption `protobuf:"bytes,1,opt,name=Option,proto3" json:"Option,omitempty" validate:"required"`
	// @gotags: validate:"required"
	RequestID *general.RequestID `protobuf:"bytes,2,opt,name=RequestID,proto3" json:"RequestID,omitempty" validate:"required"`
}

func (x *CollectionRequest) Reset() {
	*x = CollectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_v1_data_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionRequest) ProtoMessage() {}

func (x *CollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_data_v1_data_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionRequest.ProtoReflect.Descriptor instead.
func (*CollectionRequest) Descriptor() ([]byte, []int) {
	return file_data_v1_data_proto_rawDescGZIP(), []int{17}
}

func (x *CollectionRequest) GetOption() *CollectionRequestOption {
	if x != nil {
		return x.Option
	}
	return nil
}

func (x *CollectionRequest) GetRequestID() *general.RequestID {
	if x != nil {
		return x.RequestID
	}
	return nil
}

type UniqueIndexRequestOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: validate:"required"
	CollectionName string `protobuf:"bytes,1,opt,name=CollectionName,proto3" json:"CollectionName,omitempty" validate:"required"`
	// @gotags: validate:"required"
	FieldName string `protobuf:"bytes,2,opt,name=FieldName,proto3" json:"FieldName,omitempty" validate:"required"`
}

func (x *UniqueIndexRequestOption) Reset() {
	*x = UniqueIndexRequestOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_v1_data_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UniqueIndexRequestOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UniqueIndexRequestOption) ProtoMessage() {}

func (x *UniqueIndexRequestOption) ProtoReflect() protoreflect.Message {
	mi := &file_data_v1_data_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UniqueIndexRequestOption.ProtoReflect.Descriptor instead.
func (*UniqueIndexRequestOption) Descriptor() ([]byte, []int) {
	return file_data_v1_data_proto_rawDescGZIP(), []int{18}
}

func (x *UniqueIndexRequestOption) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *UniqueIndexRequestOption) GetFieldName() string {
	if x != nil {
		return x.FieldName
	}
	return ""
}

type UniqueIndexRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: validate:"required"
	Option *UniqueIndexRequestOption `protobuf:"bytes,1,opt,name=Option,proto3" json:"Option,omitempty" validate:"required"`
	// @gotags: validate:"required"
	RequestID *general.RequestID `protobuf:"bytes,2,opt,name=RequestID,proto3" json:"RequestID,omitempty" validate:"required"`
}

func (x *UniqueIndexRequest) Reset() {
	*x = UniqueIndexRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_v1_data_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UniqueIndexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UniqueIndexRequest) ProtoMessage() {}

func (x *UniqueIndexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_data_v1_data_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UniqueIndexRequest.ProtoReflect.Descriptor instead.
func (*UniqueIndexRequest) Descriptor() ([]byte, []int) {
	return file_data_v1_data_proto_rawDescGZIP(), []int{19}
}

func (x *UniqueIndexRequest) GetOption() *UniqueIndexRequestOption {
	if x != nil {
		return x.Option
	}
	return nil
}

func (x *UniqueIndexRequest) GetRequestID() *general.RequestID {
	if x != nil {
		return x.RequestID
	}
	return nil
}

type ListDocumentOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionName string `protobuf:"bytes,1,opt,name=CollectionName,proto3" json:"CollectionName,omitempty"`
	Filter         []byte `protobuf:"bytes,2,opt,name=Filter,proto3" json:"Filter,omitempty"`
}

func (x *ListDocumentOption) Reset() {
	*x = ListDocumentOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_v1_data_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDocumentOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDocumentOption) ProtoMessage() {}

func (x *ListDocumentOption) ProtoReflect() protoreflect.Message {
	mi := &file_data_v1_data_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDocumentOption.ProtoReflect.Descriptor instead.
func (*ListDocumentOption) Descriptor() ([]byte, []int) {
	return file_data_v1_data_proto_rawDescGZIP(), []int{20}
}

func (x *ListDocumentOption) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *ListDocumentOption) GetFilter() []byte {
	if x != nil {
		return x.Filter
	}
	return nil
}

type ListDocumentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: validate:"required"
	PaginateQuery *general.PaginateQuery `protobuf:"bytes,1,opt,name=PaginateQuery,proto3" json:"PaginateQuery,omitempty" validate:"required"`
	// @gotags: validate:"required"
	RequestID *general.RequestID `protobuf:"bytes,2,opt,name=RequestID,proto3" json:"RequestID,omitempty" validate:"required"`
	// @gotags: validate:"required"
	Token *general.Token `protobuf:"bytes,3,opt,name=Token,proto3" json:"Token,omitempty" validate:"required"`
	// @gotags: validate:"required"
	Option *ListDocumentOption `protobuf:"bytes,4,opt,name=Option,proto3" json:"Option,omitempty" validate:"required"`
}

func (x *ListDocumentRequest) Reset() {
	*x = ListDocumentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_v1_data_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDocumentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDocumentRequest) ProtoMessage() {}

func (x *ListDocumentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_data_v1_data_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDocumentRequest.ProtoReflect.Descriptor instead.
func (*ListDocumentRequest) Descriptor() ([]byte, []int) {
	return file_data_v1_data_proto_rawDescGZIP(), []int{21}
}

func (x *ListDocumentRequest) GetPaginateQuery() *general.PaginateQuery {
	if x != nil {
		return x.PaginateQuery
	}
	return nil
}

func (x *ListDocumentRequest) GetRequestID() *general.RequestID {
	if x != nil {
		return x.RequestID
	}
	return nil
}

func (x *ListDocumentRequest) GetToken() *general.Token {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *ListDocumentRequest) GetOption() *ListDocumentOption {
	if x != nil {
		return x.Option
	}
	return nil
}

type GetDocumentOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionName string `protobuf:"bytes,1,opt,name=CollectionName,proto3" json:"CollectionName,omitempty"`
	ID             string `protobuf:"bytes,2,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetDocumentOption) Reset() {
	*x = GetDocumentOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_v1_data_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDocumentOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDocumentOption) ProtoMessage() {}

func (x *GetDocumentOption) ProtoReflect() protoreflect.Message {
	mi := &file_data_v1_data_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDocumentOption.ProtoReflect.Descriptor instead.
func (*GetDocumentOption) Descriptor() ([]byte, []int) {
	return file_data_v1_data_proto_rawDescGZIP(), []int{22}
}

func (x *GetDocumentOption) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *GetDocumentOption) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type GetDocumentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: validate:"required"
	RequestID *general.RequestID `protobuf:"bytes,1,opt,name=RequestID,proto3" json:"RequestID,omitempty" validate:"required"`
	// @gotags: validate:"required"
	Token *general.Token `protobuf:"bytes,2,opt,name=Token,proto3" json:"Token,omitempty" validate:"required"`
	// @gotags: validate:"required"
	Option *GetDocumentOption `protobuf:"bytes,3,opt,name=Option,proto3" json:"Option,omitempty" validate:"required"`
}

func (x *GetDocumentRequest) Reset() {
	*x = GetDocumentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_v1_data_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDocumentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDocumentRequest) ProtoMessage() {}

func (x *GetDocumentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_data_v1_data_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDocumentRequest.ProtoReflect.Descriptor instead.
func (*GetDocumentRequest) Descriptor() ([]byte, []int) {
	return file_data_v1_data_proto_rawDescGZIP(), []int{23}
}

func (x *GetDocumentRequest) GetRequestID() *general.RequestID {
	if x != nil {
		return x.RequestID
	}
	return nil
}

func (x *GetDocumentRequest) GetToken() *general.Token {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *GetDocumentRequest) GetOption() *GetDocumentOption {
	if x != nil {
		return x.Option
	}
	return nil
}

type InsertDocumentOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionName string `protobuf:"bytes,1,opt,name=CollectionName,proto3" json:"CollectionName,omitempty"`
	Data           []byte `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *InsertDocumentOption) Reset() {
	*x = InsertDocumentOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_v1_data_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertDocumentOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertDocumentOption) ProtoMessage() {}

func (x *InsertDocumentOption) ProtoReflect() protoreflect.Message {
	mi := &file_data_v1_data_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertDocumentOption.ProtoReflect.Descriptor instead.
func (*InsertDocumentOption) Descriptor() ([]byte, []int) {
	return file_data_v1_data_proto_rawDescGZIP(), []int{24}
}

func (x *InsertDocumentOption) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *InsertDocumentOption) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type InsertDocumentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: validate:"required"
	RequestID *general.RequestID `protobuf:"bytes,1,opt,name=RequestID,proto3" json:"RequestID,omitempty" validate:"required"`
	// @gotags: validate:"required"
	Token *general.Token `protobuf:"bytes,2,opt,name=Token,proto3" json:"Token,omitempty" validate:"required"`
	// @gotags: validate:"required"
	Option *InsertDocumentOption `protobuf:"bytes,3,opt,name=Option,proto3" json:"Option,omitempty" validate:"required"`
}

func (x *InsertDocumentRequest) Reset() {
	*x = InsertDocumentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_v1_data_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertDocumentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertDocumentRequest) ProtoMessage() {}

func (x *InsertDocumentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_data_v1_data_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertDocumentRequest.ProtoReflect.Descriptor instead.
func (*InsertDocumentRequest) Descriptor() ([]byte, []int) {
	return file_data_v1_data_proto_rawDescGZIP(), []int{25}
}

func (x *InsertDocumentRequest) GetRequestID() *general.RequestID {
	if x != nil {
		return x.RequestID
	}
	return nil
}

func (x *InsertDocumentRequest) GetToken() *general.Token {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *InsertDocumentRequest) GetOption() *InsertDocumentOption {
	if x != nil {
		return x.Option
	}
	return nil
}

type UpdateDocumentOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionName string `protobuf:"bytes,1,opt,name=CollectionName,proto3" json:"CollectionName,omitempty"`
	ID             string `protobuf:"bytes,2,opt,name=ID,proto3" json:"ID,omitempty"`
	Data           []byte `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *UpdateDocumentOption) Reset() {
	*x = UpdateDocumentOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_v1_data_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDocumentOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDocumentOption) ProtoMessage() {}

func (x *UpdateDocumentOption) ProtoReflect() protoreflect.Message {
	mi := &file_data_v1_data_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDocumentOption.ProtoReflect.Descriptor instead.
func (*UpdateDocumentOption) Descriptor() ([]byte, []int) {
	return file_data_v1_data_proto_rawDescGZIP(), []int{26}
}

func (x *UpdateDocumentOption) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *UpdateDocumentOption) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *UpdateDocumentOption) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateDocumentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: validate:"required"
	RequestID *general.RequestID `protobuf:"bytes,1,opt,name=RequestID,proto3" json:"RequestID,omitempty" validate:"required"`
	// @gotags: validate:"required"
	Token *general.Token `protobuf:"bytes,2,opt,name=Token,proto3" json:"Token,omitempty" validate:"required"`
	// @gotags: validate:"required"
	Option *UpdateDocumentOption `protobuf:"bytes,3,opt,name=Option,proto3" json:"Option,omitempty" validate:"required"`
}

func (x *UpdateDocumentRequest) Reset() {
	*x = UpdateDocumentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_v1_data_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDocumentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDocumentRequest) ProtoMessage() {}

func (x *UpdateDocumentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_data_v1_data_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDocumentRequest.ProtoReflect.Descriptor instead.
func (*UpdateDocumentRequest) Descriptor() ([]byte, []int) {
	return file_data_v1_data_proto_rawDescGZIP(), []int{27}
}

func (x *UpdateDocumentRequest) GetRequestID() *general.RequestID {
	if x != nil {
		return x.RequestID
	}
	return nil
}

func (x *UpdateDocumentRequest) GetToken() *general.Token {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *UpdateDocumentRequest) GetOption() *UpdateDocumentOption {
	if x != nil {
		return x.Option
	}
	return nil
}

type DeleteDocumentOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionName string `protobuf:"bytes,1,opt,name=CollectionName,proto3" json:"CollectionName,omitempty"`
	ID             string `protobuf:"bytes,2,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *DeleteDocumentOption) Reset() {
	*x = DeleteDocumentOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_v1_data_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDocumentOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDocumentOption) ProtoMessage() {}

func (x *DeleteDocumentOption) ProtoReflect() protoreflect.Message {
	mi := &file_data_v1_data_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDocumentOption.ProtoReflect.Descriptor instead.
func (*DeleteDocumentOption) Descriptor() ([]byte, []int) {
	return file_data_v1_data_proto_rawDescGZIP(), []int{28}
}

func (x *DeleteDocumentOption) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *DeleteDocumentOption) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type DeleteDocumentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: validate:"required"
	RequestID *general.RequestID `protobuf:"bytes,1,opt,name=RequestID,proto3" json:"RequestID,omitempty" validate:"required"`
	// @gotags: validate:"required"
	Token *general.Token `protobuf:"bytes,2,opt,name=Token,proto3" json:"Token,omitempty" validate:"required"`
	// @gotags: validate:"required"
	Option *DeleteDocumentOption `protobuf:"bytes,3,opt,name=Option,proto3" json:"Option,omitempty" validate:"required"`
}

func (x *DeleteDocumentRequest) Reset() {
	*x = DeleteDocumentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_v1_data_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDocumentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDocumentRequest) ProtoMessage() {}

func (x *DeleteDocumentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_data_v1_data_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDocumentRequest.ProtoReflect.Descriptor instead.
func (*DeleteDocumentRequest) Descriptor() ([]byte, []int) {
	return file_data_v1_data_proto_rawDescGZIP(), []int{29}
}

func (x *DeleteDocumentRequest) GetRequestID() *general.RequestID {
	if x != nil {
		return x.RequestID
	}
	return nil
}

func (x *DeleteDocumentRequest) GetToken() *general.Token {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *DeleteDocumentRequest) GetOption() *DeleteDocumentOption {
	if x != nil {
		return x.Option
	}
	return nil
}

type BatchDeleteDocumentOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionName string   `protobuf:"bytes,1,opt,name=CollectionName,proto3" json:"CollectionName,omitempty"`
	IDs            []string `protobuf:"bytes,2,rep,name=IDs,proto3" json:"IDs,omitempty"`
}

func (x *BatchDeleteDocumentOption) Reset() {
	*x = BatchDeleteDocumentOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_v1_data_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchDeleteDocumentOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchDeleteDocumentOption) ProtoMessage() {}

func (x *BatchDeleteDocumentOption) ProtoReflect() protoreflect.Message {
	mi := &file_data_v1_data_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchDeleteDocumentOption.ProtoReflect.Descriptor instead.
func (*BatchDeleteDocumentOption) Descriptor() ([]byte, []int) {
	return file_data_v1_data_proto_rawDescGZIP(), []int{30}
}

func (x *BatchDeleteDocumentOption) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *BatchDeleteDocumentOption) GetIDs() []string {
	if x != nil {
		return x.IDs
	}
	return nil
}

type BatchDeleteDocumentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: validate:"required"
	RequestID *general.RequestID `protobuf:"bytes,1,opt,name=RequestID,proto3" json:"RequestID,omitempty" validate:"required"`
	// @gotags: validate:"required"
	Token *general.Token `protobuf:"bytes,2,opt,name=Token,proto3" json:"Token,omitempty" validate:"required"`
	// @gotags: validate:"required"
	Option *BatchDeleteDocumentOption `protobuf:"bytes,3,opt,name=Option,proto3" json:"Option,omitempty" validate:"required"`
}

func (x *BatchDeleteDocumentRequest) Reset() {
	*x = BatchDeleteDocumentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_v1_data_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchDeleteDocumentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchDeleteDocumentRequest) ProtoMessage() {}

func (x *BatchDeleteDocumentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_data_v1_data_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchDeleteDocumentRequest.ProtoReflect.Descriptor instead.
func (*BatchDeleteDocumentRequest) Descriptor() ([]byte, []int) {
	return file_data_v1_data_proto_rawDescGZIP(), []int{31}
}

func (x *BatchDeleteDocumentRequest) GetRequestID() *general.RequestID {
	if x != nil {
		return x.RequestID
	}
	return nil
}

func (x *BatchDeleteDocumentRequest) GetToken() *general.Token {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *BatchDeleteDocumentRequest) GetOption() *BatchDeleteDocumentOption {
	if x != nil {
		return x.Option
	}
	return nil
}

type GetDocumentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *GetDocumentResponse) Reset() {
	*x = GetDocumentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_v1_data_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDocumentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDocumentResponse) ProtoMessage() {}

func (x *GetDocumentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_data_v1_data_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDocumentResponse.ProtoReflect.Descriptor instead.
func (*GetDocumentResponse) Descriptor() ([]byte, []int) {
	return file_data_v1_data_proto_rawDescGZIP(), []int{32}
}

func (x *GetDocumentResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type DocumentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *DocumentResponse) Reset() {
	*x = DocumentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_v1_data_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocumentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentResponse) ProtoMessage() {}

func (x *DocumentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_data_v1_data_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentResponse.ProtoReflect.Descriptor instead.
func (*DocumentResponse) Descriptor() ([]byte, []int) {
	return file_data_v1_data_proto_rawDescGZIP(), []int{33}
}

func (x *DocumentResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type DocumentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *DocumentsResponse) Reset() {
	*x = DocumentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_v1_data_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocumentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentsResponse) ProtoMessage() {}

func (x *DocumentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_data_v1_data_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentsResponse.ProtoReflect.Descriptor instead.
func (*DocumentsResponse) Descriptor() ([]byte, []int) {
	return file_data_v1_data_proto_rawDescGZIP(), []int{34}
}

func (x *DocumentsResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ListDocumentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paginate *general.PaginateInfo `protobuf:"bytes,1,opt,name=Paginate,proto3" json:"Paginate,omitempty"`
	Data     []byte                `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *ListDocumentResponse) Reset() {
	*x = ListDocumentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_v1_data_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDocumentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDocumentResponse) ProtoMessage() {}

func (x *ListDocumentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_data_v1_data_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDocumentResponse.ProtoReflect.Descriptor instead.
func (*ListDocumentResponse) Descriptor() ([]byte, []int) {
	return file_data_v1_data_proto_rawDescGZIP(), []int{35}
}

func (x *ListDocumentResponse) GetPaginate() *general.PaginateInfo {
	if x != nil {
		return x.Paginate
	}
	return nil
}

func (x *ListDocumentResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_data_v1_data_proto protoreflect.FileDescriptor

var file_data_v1_data_proto_rawDesc = []byte{
	0x0a, 0x12, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x63, 0x6d, 0x64, 0x62, 0x2d, 0x73, 0x64,
	0x6b, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x63, 0x6d, 0x64, 0x62,
	0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2f, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x63, 0x6d, 0x64,
	0x62, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb3, 0x01, 0x0a, 0x1d, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x09, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x44, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x24, 0x0a,
	0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x05, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x3a, 0x0a, 0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x72, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x26, 0x0a, 0x0e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x22, 0x53, 0x0a, 0x11, 0x41, 0x6c, 0x6c, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x9d, 0x01, 0x0a, 0x12, 0x41, 0x6c, 0x6c,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x30, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x44, 0x12, 0x24, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2f, 0x0a, 0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x41,
	0x6c, 0x6c, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9a, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x49, 0x44, 0x12, 0x30, 0x0a, 0x13, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x44, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x13, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x49, 0x44, 0x73, 0x22, 0x71, 0x0a, 0x0f, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x52,
	0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x2c, 0x0a, 0x06, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x56, 0x0a, 0x0e, 0x44, 0x69, 0x73, 0x74,
	0x69, 0x6e, 0x63, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x71, 0x0a, 0x0f, 0x44, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x2c, 0x0a, 0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x44, 0x69, 0x73,
	0x74, 0x69, 0x6e, 0x63, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x26, 0x0a, 0x10, 0x44, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x30, 0x0a, 0x16, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x81, 0x01,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x09, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44,
	0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x34, 0x0a, 0x06, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x7f, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x43, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x43, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x63, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x40, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x22, 0x3e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x54, 0x72, 0x65, 0x65, 0x4e,
	0x6f, 0x64, 0x65, 0x73, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x54, 0x61,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x54, 0x61, 0x67, 0x12, 0x16, 0x0a, 0x06,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x22, 0x79, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x54, 0x72, 0x65, 0x65, 0x4e,
	0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x09, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x44, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x30, 0x0a,
	0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x65, 0x65, 0x4e, 0x6f, 0x64, 0x65,
	0x73, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x2a, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x54, 0x72, 0x65, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x2d, 0x0a, 0x17, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x7c, 0x0a, 0x11, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x35, 0x0a, 0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x6c, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x52, 0x09, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x22, 0x60, 0x0a, 0x18, 0x55, 0x6e, 0x69, 0x71,
	0x75, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x7e, 0x0a, 0x12, 0x55, 0x6e,
	0x69, 0x71, 0x75, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x36, 0x0a, 0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x52,
	0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x22, 0x54, 0x0a, 0x12, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x26, 0x0a, 0x0e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x22, 0xdd, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x0d, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x0d, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x30, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x6c, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x52, 0x09, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x6c, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x30,
	0x0a, 0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x4b, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x9d, 0x01,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x6c, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x52, 0x09, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2f, 0x0a, 0x06,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x52, 0x0a,
	0x14, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x22, 0xa3, 0x01, 0x0a, 0x15, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x09, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x44, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x24, 0x0a,
	0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x05, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x32, 0x0a, 0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72,
	0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x62, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x26, 0x0a, 0x0e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0xa3, 0x01, 0x0a, 0x15,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x6c, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x52, 0x09, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c,
	0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x32, 0x0a,
	0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x4e, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49,
	0x44, 0x22, 0xa3, 0x01, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x09, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x44, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x24, 0x0a,
	0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x05, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x32, 0x0a, 0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x55, 0x0a, 0x19, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x49, 0x44, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x49, 0x44, 0x73, 0x22, 0xad,
	0x01, 0x0a, 0x1a, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a,
	0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x44, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12,
	0x24, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x05,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x37, 0x0a, 0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x29,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x26, 0x0a, 0x10, 0x44, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x22, 0x27, 0x0a, 0x11, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x5d, 0x0a, 0x14, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x31, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x32, 0x9c, 0x09, 0x0a, 0x0b, 0x44, 0x61,
	0x74, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x45, 0x0a, 0x10, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x45, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x18, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x47, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x18, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x55, 0x6e, 0x69,
	0x71, 0x75, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0c, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x42, 0x0a, 0x0b, 0x41, 0x6c, 0x6c, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x18, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x6c, 0x6c, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x19, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0e,
	0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1b,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57,
	0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x42, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x23, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x51, 0x0a, 0x13, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x54, 0x72, 0x65, 0x65, 0x4e, 0x6f,
	0x64, 0x65, 0x73, 0x12, 0x19, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72,
	0x65, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x65, 0x65, 0x4e, 0x6f, 0x64,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1d, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1b, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3b,
	0x0a, 0x08, 0x44, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x63, 0x74, 0x12, 0x15, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x44, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x44, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x63,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x08, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x2c, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x59, 0x6f, 0x73, 0x74, 0x61, 0x72, 0x64, 0x65, 0x76,
	0x2f, 0x63, 0x6d, 0x64, 0x62, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x76,
	0x31, 0x3b, 0x64, 0x61, 0x74, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_data_v1_data_proto_rawDescOnce sync.Once
	file_data_v1_data_proto_rawDescData = file_data_v1_data_proto_rawDesc
)

func file_data_v1_data_proto_rawDescGZIP() []byte {
	file_data_v1_data_proto_rawDescOnce.Do(func() {
		file_data_v1_data_proto_rawDescData = protoimpl.X.CompressGZIP(file_data_v1_data_proto_rawDescData)
	})
	return file_data_v1_data_proto_rawDescData
}

var file_data_v1_data_proto_msgTypes = make([]protoimpl.MessageInfo, 36)
var file_data_v1_data_proto_goTypes = []interface{}{
	(*UpdateDocumentByFilterRequest)(nil), // 0: data.UpdateDocumentByFilterRequest
	(*UpdateDocumentByFilterOption)(nil),  // 1: data.UpdateDocumentByFilterOption
	(*AllDocumentOption)(nil),             // 2: data.AllDocumentOption
	(*AllDocumentRequest)(nil),            // 3: data.AllDocumentRequest
	(*RelationOption)(nil),                // 4: data.RelationOption
	(*RelationRequest)(nil),               // 5: data.RelationRequest
	(*DistinctOption)(nil),                // 6: data.DistinctOption
	(*DistinctRequest)(nil),               // 7: data.DistinctRequest
	(*DistinctResponse)(nil),              // 8: data.DistinctResponse
	(*GetResourceCountOption)(nil),        // 9: data.GetResourceCountOption
	(*GetResourceCountRequest)(nil),       // 10: data.GetResourceCountRequest
	(*ResourceCount)(nil),                 // 11: data.ResourceCount
	(*ResourceCountResponse)(nil),         // 12: data.ResourceCountResponse
	(*GetTreeNodesOption)(nil),            // 13: data.GetTreeNodesOption
	(*GetTreeNodesRequest)(nil),           // 14: data.GetTreeNodesRequest
	(*GetTreeNodesResponse)(nil),          // 15: data.GetTreeNodesResponse
	(*CollectionRequestOption)(nil),       // 16: data.CollectionRequestOption
	(*CollectionRequest)(nil),             // 17: data.CollectionRequest
	(*UniqueIndexRequestOption)(nil),      // 18: data.UniqueIndexRequestOption
	(*UniqueIndexRequest)(nil),            // 19: data.UniqueIndexRequest
	(*ListDocumentOption)(nil),            // 20: data.ListDocumentOption
	(*ListDocumentRequest)(nil),           // 21: data.ListDocumentRequest
	(*GetDocumentOption)(nil),             // 22: data.GetDocumentOption
	(*GetDocumentRequest)(nil),            // 23: data.GetDocumentRequest
	(*InsertDocumentOption)(nil),          // 24: data.InsertDocumentOption
	(*InsertDocumentRequest)(nil),         // 25: data.InsertDocumentRequest
	(*UpdateDocumentOption)(nil),          // 26: data.UpdateDocumentOption
	(*UpdateDocumentRequest)(nil),         // 27: data.UpdateDocumentRequest
	(*DeleteDocumentOption)(nil),          // 28: data.DeleteDocumentOption
	(*DeleteDocumentRequest)(nil),         // 29: data.DeleteDocumentRequest
	(*BatchDeleteDocumentOption)(nil),     // 30: data.BatchDeleteDocumentOption
	(*BatchDeleteDocumentRequest)(nil),    // 31: data.BatchDeleteDocumentRequest
	(*GetDocumentResponse)(nil),           // 32: data.GetDocumentResponse
	(*DocumentResponse)(nil),              // 33: data.DocumentResponse
	(*DocumentsResponse)(nil),             // 34: data.DocumentsResponse
	(*ListDocumentResponse)(nil),          // 35: data.ListDocumentResponse
	(*general.RequestID)(nil),             // 36: general.RequestID
	(*general.Token)(nil),                 // 37: general.Token
	(*general.PaginateQuery)(nil),         // 38: general.PaginateQuery
	(*general.PaginateInfo)(nil),          // 39: general.PaginateInfo
	(*emptypb.Empty)(nil),                 // 40: google.protobuf.Empty
}
var file_data_v1_data_proto_depIdxs = []int32{
	36, // 0: data.UpdateDocumentByFilterRequest.RequestID:type_name -> general.RequestID
	37, // 1: data.UpdateDocumentByFilterRequest.Token:type_name -> general.Token
	1,  // 2: data.UpdateDocumentByFilterRequest.Option:type_name -> data.UpdateDocumentByFilterOption
	36, // 3: data.AllDocumentRequest.RequestID:type_name -> general.RequestID
	37, // 4: data.AllDocumentRequest.Token:type_name -> general.Token
	2,  // 5: data.AllDocumentRequest.Option:type_name -> data.AllDocumentOption
	36, // 6: data.RelationRequest.RequestID:type_name -> general.RequestID
	4,  // 7: data.RelationRequest.Option:type_name -> data.RelationOption
	36, // 8: data.DistinctRequest.RequestID:type_name -> general.RequestID
	6,  // 9: data.DistinctRequest.Option:type_name -> data.DistinctOption
	36, // 10: data.GetResourceCountRequest.RequestID:type_name -> general.RequestID
	9,  // 11: data.GetResourceCountRequest.Option:type_name -> data.GetResourceCountOption
	11, // 12: data.ResourceCountResponse.Data:type_name -> data.ResourceCount
	36, // 13: data.GetTreeNodesRequest.RequestID:type_name -> general.RequestID
	13, // 14: data.GetTreeNodesRequest.Option:type_name -> data.GetTreeNodesOption
	16, // 15: data.CollectionRequest.Option:type_name -> data.CollectionRequestOption
	36, // 16: data.CollectionRequest.RequestID:type_name -> general.RequestID
	18, // 17: data.UniqueIndexRequest.Option:type_name -> data.UniqueIndexRequestOption
	36, // 18: data.UniqueIndexRequest.RequestID:type_name -> general.RequestID
	38, // 19: data.ListDocumentRequest.PaginateQuery:type_name -> general.PaginateQuery
	36, // 20: data.ListDocumentRequest.RequestID:type_name -> general.RequestID
	37, // 21: data.ListDocumentRequest.Token:type_name -> general.Token
	20, // 22: data.ListDocumentRequest.Option:type_name -> data.ListDocumentOption
	36, // 23: data.GetDocumentRequest.RequestID:type_name -> general.RequestID
	37, // 24: data.GetDocumentRequest.Token:type_name -> general.Token
	22, // 25: data.GetDocumentRequest.Option:type_name -> data.GetDocumentOption
	36, // 26: data.InsertDocumentRequest.RequestID:type_name -> general.RequestID
	37, // 27: data.InsertDocumentRequest.Token:type_name -> general.Token
	24, // 28: data.InsertDocumentRequest.Option:type_name -> data.InsertDocumentOption
	36, // 29: data.UpdateDocumentRequest.RequestID:type_name -> general.RequestID
	37, // 30: data.UpdateDocumentRequest.Token:type_name -> general.Token
	26, // 31: data.UpdateDocumentRequest.Option:type_name -> data.UpdateDocumentOption
	36, // 32: data.DeleteDocumentRequest.RequestID:type_name -> general.RequestID
	37, // 33: data.DeleteDocumentRequest.Token:type_name -> general.Token
	28, // 34: data.DeleteDocumentRequest.Option:type_name -> data.DeleteDocumentOption
	36, // 35: data.BatchDeleteDocumentRequest.RequestID:type_name -> general.RequestID
	37, // 36: data.BatchDeleteDocumentRequest.Token:type_name -> general.Token
	30, // 37: data.BatchDeleteDocumentRequest.Option:type_name -> data.BatchDeleteDocumentOption
	39, // 38: data.ListDocumentResponse.Paginate:type_name -> general.PaginateInfo
	17, // 39: data.DataService.CreateCollection:input_type -> data.CollectionRequest
	17, // 40: data.DataService.DeleteCollection:input_type -> data.CollectionRequest
	19, // 41: data.DataService.CreateUniqueIndex:input_type -> data.UniqueIndexRequest
	19, // 42: data.DataService.DeleteUniqueIndex:input_type -> data.UniqueIndexRequest
	21, // 43: data.DataService.ListDocument:input_type -> data.ListDocumentRequest
	3,  // 44: data.DataService.AllDocument:input_type -> data.AllDocumentRequest
	23, // 45: data.DataService.GetDocument:input_type -> data.GetDocumentRequest
	25, // 46: data.DataService.InsertDocument:input_type -> data.InsertDocumentRequest
	27, // 47: data.DataService.UpdateDocument:input_type -> data.UpdateDocumentRequest
	0,  // 48: data.DataService.UpdateDocumentByFilter:input_type -> data.UpdateDocumentByFilterRequest
	29, // 49: data.DataService.DeleteDocument:input_type -> data.DeleteDocumentRequest
	31, // 50: data.DataService.BatchDeleteDocument:input_type -> data.BatchDeleteDocumentRequest
	14, // 51: data.DataService.GetTreeNodes:input_type -> data.GetTreeNodesRequest
	10, // 52: data.DataService.GetResourceCount:input_type -> data.GetResourceCountRequest
	7,  // 53: data.DataService.Distinct:input_type -> data.DistinctRequest
	5,  // 54: data.DataService.Relation:input_type -> data.RelationRequest
	40, // 55: data.DataService.CreateCollection:output_type -> google.protobuf.Empty
	40, // 56: data.DataService.DeleteCollection:output_type -> google.protobuf.Empty
	40, // 57: data.DataService.CreateUniqueIndex:output_type -> google.protobuf.Empty
	40, // 58: data.DataService.DeleteUniqueIndex:output_type -> google.protobuf.Empty
	35, // 59: data.DataService.ListDocument:output_type -> data.ListDocumentResponse
	34, // 60: data.DataService.AllDocument:output_type -> data.DocumentsResponse
	32, // 61: data.DataService.GetDocument:output_type -> data.GetDocumentResponse
	33, // 62: data.DataService.InsertDocument:output_type -> data.DocumentResponse
	33, // 63: data.DataService.UpdateDocument:output_type -> data.DocumentResponse
	33, // 64: data.DataService.UpdateDocumentByFilter:output_type -> data.DocumentResponse
	40, // 65: data.DataService.DeleteDocument:output_type -> google.protobuf.Empty
	40, // 66: data.DataService.BatchDeleteDocument:output_type -> google.protobuf.Empty
	15, // 67: data.DataService.GetTreeNodes:output_type -> data.GetTreeNodesResponse
	12, // 68: data.DataService.GetResourceCount:output_type -> data.ResourceCountResponse
	8,  // 69: data.DataService.Distinct:output_type -> data.DistinctResponse
	40, // 70: data.DataService.Relation:output_type -> google.protobuf.Empty
	55, // [55:71] is the sub-list for method output_type
	39, // [39:55] is the sub-list for method input_type
	39, // [39:39] is the sub-list for extension type_name
	39, // [39:39] is the sub-list for extension extendee
	0,  // [0:39] is the sub-list for field type_name
}

func init() { file_data_v1_data_proto_init() }
func file_data_v1_data_proto_init() {
	if File_data_v1_data_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_data_v1_data_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDocumentByFilterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_v1_data_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDocumentByFilterOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_v1_data_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllDocumentOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_v1_data_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllDocumentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_v1_data_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelationOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_v1_data_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_v1_data_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DistinctOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_v1_data_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DistinctRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_v1_data_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DistinctResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_v1_data_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResourceCountOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_v1_data_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResourceCountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_v1_data_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_v1_data_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceCountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_v1_data_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTreeNodesOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_v1_data_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTreeNodesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_v1_data_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTreeNodesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_v1_data_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectionRequestOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_v1_data_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_v1_data_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UniqueIndexRequestOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_v1_data_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UniqueIndexRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_v1_data_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDocumentOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_v1_data_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDocumentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_v1_data_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDocumentOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_v1_data_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDocumentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_v1_data_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertDocumentOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_v1_data_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertDocumentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_v1_data_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDocumentOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_v1_data_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDocumentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_v1_data_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDocumentOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_v1_data_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDocumentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_v1_data_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchDeleteDocumentOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_v1_data_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchDeleteDocumentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_v1_data_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDocumentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_v1_data_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocumentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_v1_data_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocumentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_v1_data_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDocumentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_data_v1_data_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   36,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_data_v1_data_proto_goTypes,
		DependencyIndexes: file_data_v1_data_proto_depIdxs,
		MessageInfos:      file_data_v1_data_proto_msgTypes,
	}.Build()
	File_data_v1_data_proto = out.File
	file_data_v1_data_proto_rawDesc = nil
	file_data_v1_data_proto_goTypes = nil
	file_data_v1_data_proto_depIdxs = nil
}
